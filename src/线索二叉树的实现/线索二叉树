普通的二叉树无法直接得到一个节点的前一个节点(如果要得到就得多次遍历)，利用线索二叉树可以得到一个非开始节点的叶子节点的前一个节点，后一个节点的信息(线索二叉树只能作用于没有左右儿子节点的节点)
线索二叉树基于链式存储二叉树创建
例如二叉树                1
        2       3
      4   5        6   中序排列为4 2 5 1 3 6
      对于叶子节点5来说，这个节点的信息为 A 5 B，A存放左儿子节点的信息，B存放右儿子节点的信息，(因为如果使用中序遍历，4是第一个遍历的信息，所以他之前没有元素)，将A指向5的前一个结点2，B指向5的后一个节点1
  3的A指向前一个结点1，6的A指向前一个结点3，这样就构成了一个中序线索化二叉树，主要就是给节点的A,B位置坐上一个标记，如果是0，代表这个节点指向的是左右儿子节点，如果是1，表示指向的是下一个节点
  
  线索化二叉树时，一个节点的前一个节点叫做前驱节点(例如5在1前面，5就是1的前驱节点)，这个节点的后一个节点叫做后继节点
 
线索二叉树的遍历:因为线索二叉树的节点已经跟他的前驱节点后继节点建立了联系，取得一个节点就可以获得所有节点