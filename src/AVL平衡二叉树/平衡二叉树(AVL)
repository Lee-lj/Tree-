AVL树又叫平衡二叉树，平衡二叉树必须是一个二叉排序树，左子树和右子树的高度的差的绝对值不超过1，才能视为平衡二叉树(左子树和有子树也是平衡二叉树)
二叉排序树优点就是易于查找，便于删除，插入，但是对于{1 2 3 4 5 6 7 8}这样的一个数组，二叉排序树就会将其构成
      1
        2 
          3 
            4 
              5
                6                这样一个树，丧失了二叉排序树的优点，平衡二叉树将这个数组转换为
                  7                                              3
                                                              2     5
                                                            1     4   7
                                                                     6  8      
                       使用了节点的旋转来组成平衡二叉树，每加入一个节点，就进行判断，使其满足平衡二叉树
        节点旋转的几种情况:
         1.左左   (在一个节点的左边的左边加入一个节点)  右旋转
  第一种情况(ABCD是本来就存在的节点，E新加入): A       右旋转之后得到   B       还有可能B含有一个子节点: A  因为左子树节点必小于根节点(x必大于B小于A)将X作为A的左儿子，所以旋转之后为  B
                                B   C            D    A                   B      C                                               D     A  
                              D               E          C              D   X                                                E        X  C   
                           E                                         E                                                     
         第二种情况:  A   将B作为根节点，右旋转得到       B 
          B                      C     A
       C
         2.右右，刚好和左左的情况相反，在节点的右边加入节点，进行左旋转即可(左旋转和右旋转方法类似)
         左旋转和右旋转都是单旋转，也存在了双旋转的情况,同时使用左右旋转。例如:  A    这种情况先对B左旋转，然后对A右旋转  对于  A    ,先进行C的右旋转，然后进行A的左旋转
                                                 B      C                        B       C
                                               D   E                                   D   E  
                                                     F                               F   
                                                      F为新加入的E的右儿子节点，这种情况先使用左旋转得到   E
                                                                                      B     F
                                                                                    D
                                                                                          再使用右旋转的到最终的平衡二叉树:      E
                                                       B     A
                                                    D       F  C                             
                                                                                         使用双旋转的话，先判断根节点A的左儿子节点B的左右子树高度差，将其旋转后再判断根节点A的左右子树高度差，然后旋转         
         
         